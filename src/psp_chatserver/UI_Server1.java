package psp_chatserver;

import java.io.IOException;
import static java.lang.Thread.sleep;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class UI_Server1 extends javax.swing.JFrame {

    //VARIBLES DE CLASE
    public static int puerto = 0;

    /**
     * Creates new form UI_Server1
     */
    public UI_Server1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnIniciar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("BIENVENIDO");

        btnIniciar.setText("INICIAR");
        btnIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIniciarActionPerformed(evt);
            }
        });

        jLabel3.setText("Server Chat");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(153, 153, 153)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1)))
                .addContainerGap(201, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(50, 50, 50)
                .addComponent(btnIniciar)
                .addContainerGap(64, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIniciarActionPerformed
        //USANDO ESTE TIPO DE MÉTODOS DEL JOPTIONPANE, NOS ASEGURAMOS DE QUE NO SE HAGA
        //NINGUNA OTRA ACCIÓN HASTA QUE DESAPAREZCA EL MENÚ DE JOPTIONPANE
        puerto = Integer.parseInt(JOptionPane.showInputDialog("INTRODUCE EL PUERTO QUE DESEAS UTILIZAR: "));

//        UI_Server2 ui2 = new UI_Server2();
//        ui2.setVisible(true);
//
        //EL INICIO DEL SERVER BLOQUEA TAMBIÉN LA INTERFAZ 2???
        //PROBAR A PONER LA INTERFAZ 2 EN UN HILO PARA QUE NO OCURRA
        //AL PULSAR ESTE BOTÓN,INICIAMOS TODO, INCLUSO PONEMOS TEXTO EN LA UI
        System.out.println("***** CREANDO SOCKET SERVIDOR *****");

        try {
            ServerSocket serverSocket = new ServerSocket();
            InetSocketAddress addr = new InetSocketAddress("localhost", UI_Server1.puerto);

            System.out.println("***** REALIZANDO BIND *****");

            serverSocket.bind(addr);

            System.out.println("***** PUERTO " + UI_Server1.puerto + " *****");

            /*
        podríamos poner != null para que, cuando serverSocket deje de recibir
        conexiones, el server se apagase directamente
             */
            int serverStatus = 1;
            //CONTADOR DE CLIENTES Y A LA VEZ SU ID
            int n = 1;
            //CAMBIAR LA CONDICION 
            while (serverStatus == 1) {

                System.out.println("****** ACEPTANDO CONEXIONES ******");
                //PONER EL SOCKET COMO PARÁMETRO DEL HILO PARA DIFERENCIARLOS (?)
                Socket newSocket = serverSocket.accept();

                //CADA CLIENTE QUE SE CONECTE SERÁ UN HILO, CON SUS ATRIBUTOS DE LA
                //CLASE DE HILOS
                //CADA UNO TENDRÁ SU SOCKET, UN NÚMERO A MODO DE "ID" 
                //Y LUEGO SE LE PONDRÁ SU NICKNAME, QUE DE MOMENTO SERÁ PREDETERMINADO
                if (n < 10) {
                    ServerHilos c = new ServerHilos(newSocket, n);
                    //PARECE QUE CUANDO LE DAMOS A "INICIAR" LA UI SE BLOQUEA HASTA
                    //QUE SE CONECTA UN USE, ASÍ QUE APROVECHAR CADA CONEXIÓN PARA
                    //HACER LOS CAMBIOS NECESARIOS Y FIJARSE ABAJO DEL TODO EN LAS LABELS QUE TENEMOS
                    c.start();

                    //BORRAR?
                    if (serverStatus == 0) {

                        System.out.println("***** CERRANDO SERVER *****");
                        serverSocket.close();

                    }

                    //INCREMENTAMOS EL NÚMERO DE CLIENTES
                    n++;

                } else {
                    System.out.println("MÁXIMO NÚMERO DE CLIENTES ALCANZADO");
                    //ENVIAR MENSAJE INFORMATIVO AL CLIENTE???
                }
            }

        } catch (IOException ex) {
            Logger.getLogger(UI_Server2.class.getName()).log(Level.SEVERE, null, ex);
        }

        //PROBLEMA RESUELTO: LA UI DONDE ESTÉ EL BOTÓN CON EL CÓDIGO QUE INICIA EL SERVER,
        //UNA VEZ INICIAR, SE BLOQUEA, ASÍ QUE INICIAMOS EL SERVER EN ESTA CLASE

    }//GEN-LAST:event_btnIniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_Server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_Server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_Server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_Server1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_Server1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIniciar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
